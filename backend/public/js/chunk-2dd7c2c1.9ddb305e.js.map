{"version":3,"sources":["webpack:///./src/components/Editor.vue","webpack:///./src/components/Editor.vue?ff18","webpack:///./src/components/backend/forms/AdminBaseForm.vue","webpack:///./src/components/backend/forms/AdminBaseForm.vue?2040","webpack:///./src/views/admin/posts/create.vue","webpack:///./src/views/admin/posts/create.vue?cbb4","webpack:///./src/helpers/fileFormData.js","webpack:///./src/stores/axiosInstance.js","webpack:///./src/stores/admin/posts.js"],"names":["editor","ref","data","computed","Proxy","props","modelValue","set","obj","key","value","emit","onMounted","$","summernote","height","callbacks","onChange","content","description","onBeforeUnmount","__exports__","postImage","postIcon","post","post_status_id","onFileChange","e","files","target","dataTransfer","dataImages","name","image","icon","preloadImageFile","imagePath","imgBlob","Blob","type","file","File","lastModified","Date","getTime","container","DataTransfer","items","add","console","log","postStatuses","adminPostsStore","useAdminPostsStore","async","getPostStatuses","fileFormData","bodyFormData","FormData","Object","entries","append","useAxiosStore","defineStore","loginStore","useLoginStore","refreshUserStore","useRefreshUserStore","setConfigAxios","axiosInstance","axios","create","interceptors","response","use","originalRequest","error","config","status","_retry","newToken","refresh","headers","Authorization","accessToken","logout","router","useRouter","push","showLoginPage","Promise","reject","axiosStore","posts","getByPostId","payloadPostId","getPosts","find","Number","id","tableTitle","tableHeaders","getAccessTokenStorage","get","apiHost","apiAdminGetPostStatuses","changeStatus","apiAdminChangePostStatus","createOrUpdatePost","apiAdminPostCreate","apiAdminPostsIndex","deletePost","delete","apiAdminPostDelete","filter"],"mappings":"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","file":"js/chunk-2dd7c2c1.9ddb305e.js","sourcesContent":["<template>\r\n  <div>\r\n    <textarea\r\n      id=\"summernote\"\r\n      type=\"text\"\r\n      ref=\"editor\"\r\n      v-model=\"data.description\"\r\n    >\r\n    </textarea>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n/* eslint-disable */\r\nimport { defineEmits, defineProps, ref, computed, onMounted, onBeforeUnmount } from \"vue\";\r\n\r\nlet props = defineProps([\"content\", \"modelValue\"]);\r\nlet emit = defineEmits([\"update:modelValue\", \"update-editor\"]);\r\nconst editor = ref(null);\r\nconst data = computed(() => {\r\n  return new Proxy(props.modelValue, {\r\n    set(obj, key, value) {\r\n      emit(\"update:modelValue\", { ...obj, [key]: value });\r\n      return true;\r\n    },\r\n  });\r\n});\r\nonMounted(() => {\r\n  $(editor.value).summernote({\r\n    height: 300,\r\n    callbacks: {\r\n      onChange: (content) => {\r\n        data.value.description = content;\r\n      },\r\n    },\r\n  });\r\n});\r\nonBeforeUnmount(() => {\r\n  $(\"#summernote\").summernote(\"destroy\");\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./Editor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Editor.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card card-primary\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title\">{{ titleForm || \"Название формы\" }}</h3>\r\n    </div>\r\n    <form @submit.prevent=\"emits('createOrUpdatePost', data)\">\r\n      <div class=\"card-body\">\r\n        <div class=\"form-group\">\r\n          <label for=\"inputName\">Название Статьи</label>\r\n          <input\r\n            v-model=\"data.name\"\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            id=\"inputName\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"imageInputFile\">Загрузить изображение</label>\r\n          <div class=\"input-group d-flex\">\r\n            <div class=\"custom-file\">\r\n              <input\r\n                ref=\"postImage\"\r\n                @change=\"onFileChange($event, 'image')\"\r\n                type=\"file\"\r\n                class=\"form-control\"\r\n                id=\"imageInputFile\"\r\n              />\r\n              <label class=\"custom-file-label\" for=\"imageInputFile\">\r\n                <span v-if=\"!dataImages.image\">Выберите файл</span>\r\n                <span v-else>{{ dataImages.image }}</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"iconInputFile\">Загрузить иконку</label>\r\n          <div class=\"input-group d-flex\">\r\n            <div class=\"custom-file\">\r\n              <input\r\n                ref=\"postIcon\"\r\n                @change=\"onFileChange($event, 'icon')\"\r\n                type=\"file\"\r\n                class=\"form-control\"\r\n                id=\"iconInputFile\"\r\n              />\r\n              <label class=\"custom-file-label\" for=\"iconInputFile\">\r\n                <span v-if=\"!dataImages.icon\">Выберите файл</span>\r\n                <span v-else>{{ dataImages.icon }}</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" v-if=\"props.postStatuses\">\r\n          <label for=\"exampleFormControlSelect1\">Example select</label>\r\n          <select\r\n            v-model=\"data.post_status_id\"\r\n            class=\"form-control\"\r\n            id=\"exampleFormControlSelect1\"\r\n          >\r\n            <option\r\n              :selected=\"data.post_status_id === status.id\"\r\n              :value=\"status.id\"\r\n              v-for=\"status of props.postStatuses\"\r\n              :key=\"status\"\r\n            >\r\n              {{ status.name }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <editor v-model=\"data\" />\r\n      <div class=\"card-footer bg-transparent\">\r\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, defineEmits, onMounted } from \"vue\";\r\nimport Editor from \"../../Editor.vue\";\r\n\r\nconst props = defineProps([\r\n  \"titleForm\",\r\n  \"postStatuses\",\r\n  \"post\",\r\n  \"adminPostsStore\",\r\n]);\r\nconst emits = defineEmits([\"createOrUpdatePost\"]);\r\nconst postImage = ref(null);\r\nconst postIcon = ref(null);\r\nconst data = ref(props.post || { post_status_id: 1 });\r\nconst onFileChange = (e, key) => {\r\n  const files = e.target.files || e.dataTransfer.files;\r\n  data.value[key] = files[0];\r\n  dataImages.value[key] = files[0].name;\r\n};\r\nconst dataImages = ref({\r\n  image: data.value.image,\r\n  icon: data.value.icon,\r\n});\r\nconst preloadImageFile = (imagePath, ref) => {\r\n  let imgBlob = new Blob([\"\"], { type: \"text/plain\" });\r\n  let file = new File(\r\n    [imgBlob],\r\n    imagePath || \"фаил не выбран\",\r\n    { type: \"image/jpeg\", lastModified: new Date().getTime() },\r\n    \"utf-8\"\r\n  );\r\n  let container = new DataTransfer();\r\n  container.items.add(file);\r\n  ref.value.files = container.files;\r\n  console.log(ref.value.files[0].name);\r\n};\r\nonMounted(() => {\r\n  preloadImageFile(data.value.icon, postImage);\r\n  preloadImageFile(data.value.image, postIcon);\r\n});\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./AdminBaseForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminBaseForm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"content-wrapper\">\r\n    <section class=\"content-header\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"row d-flex justify-content-center\">\r\n          <div class=\"col-md-6 col-sm-12\">\r\n            <admin-base-form\r\n              :post=\"adminPostsStore.createFormData\"\r\n              :createFormData=\"adminPostsStore.createFormData\"\r\n              :postStatuses=\"postStatuses\"\r\n              @create-or-update-post=\"adminPostsStore.createOrUpdatePost\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { onMounted, ref } from \"vue\";\r\nimport AdminBaseForm from \"@/components/backend/forms/AdminBaseForm.vue\";\r\nimport { useAdminPostsStore } from \"@/stores/admin/posts.js\";\r\nconst postStatuses = ref(null);\r\nconst adminPostsStore = useAdminPostsStore();\r\nonMounted(async () => {\r\n  postStatuses.value = await adminPostsStore.getPostStatuses();\r\n  console.log(postStatuses);\r\n});\r\n</script>\r\n","import script from \"./create.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./create.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const fileFormData = (data) => {\r\n  const bodyFormData = new FormData();\r\n  for (const [key, value] of Object.entries(data)) {\r\n    bodyFormData.append(key, value);\r\n  }\r\n\r\n  return bodyFormData;\r\n};\r\n","import { defineStore } from \"pinia\";\r\nimport { useLoginStore } from \"~/stores/login\";\r\nimport axios from \"axios\";\r\nimport { useRefreshUserStore } from \"~/stores/refreshUser.js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport const useAxiosStore = defineStore(\"axiosStore\", () => {\r\n  const loginStore = useLoginStore();\r\n  const refreshUserStore = useRefreshUserStore();\r\n  const setConfigAxios = () => {\r\n    let axiosInstance;\r\n    axiosInstance = axios.create();\r\n\r\n    // axiosInstance.interceptors.request.use(\r\n    //     async config => {\r\n    //         if (tokenAccess) {\r\n    //         }\r\n    //         return config;\r\n    //     },\r\n    //     error => {\r\n    //         return Promise.reject(error);\r\n    //     }\r\n    // );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      async (error) => {\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 403 && !originalRequest._retry) {\r\n          originalRequest._retry = true;\r\n          try {\r\n            const newToken = await refreshUserStore.refresh();\r\n            originalRequest.headers.Authorization = `Bearer ${newToken.accessToken}`;\r\n            console.log(axiosInstance(originalRequest));\r\n            return axiosInstance(originalRequest);\r\n          } catch (error) {\r\n            console.log(error);\r\n            await loginStore.logout();\r\n            const router = useRouter();\r\n            await router.push(\"/\");\r\n            loginStore.showLoginPage();\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    return axiosInstance;\r\n  };\r\n\r\n  return { setConfigAxios };\r\n});\r\n","import { defineStore } from \"pinia\";\r\nimport { fileFormData } from \"~/helpers/fileFormData.js\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {\r\n  apiHost,\r\n  apiAdminPostsIndex,\r\n  apiAdminGetPostStatuses,\r\n  apiAdminPostCreate,\r\n  apiAdminPostDelete,\r\n  apiAdminChangePostStatus,\r\n} from \"~/config/api.js\";\r\nimport { useLoginStore } from \"~/stores/login.js\";\r\nimport { useAxiosStore } from \"~/stores/axiosInstance.js\";\r\n\r\nexport const useAdminPostsStore = defineStore(\"adminPostsStore\", () => {\r\n  const loginStore = useLoginStore();\r\n  const axiosStore = useAxiosStore();\r\n  const axiosInstance = axiosStore.setConfigAxios();\r\n  const router = useRouter();\r\n  let posts = ref(null);\r\n\r\n  const getByPostId = async (payloadPostId) => {\r\n    console.log(payloadPostId);\r\n    if (posts.value === null) {\r\n      posts.value = await getPosts();\r\n    }\r\n    return posts.value.find(\r\n      (post) => Number(post.id) === Number(payloadPostId)\r\n    );\r\n  };\r\n  const tableTitle = \"Редактирование статей\";\r\n  const tableHeaders = [\r\n    \"id\",\r\n    \"name\",\r\n    \"description\",\r\n    \"image\",\r\n    \"icon\",\r\n    \"post_status_id\",\r\n    \"user_id\",\r\n    \"created_at\",\r\n    \"updated_at\",\r\n  ];\r\n  const getPostStatuses = async () => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `${apiHost}/${apiAdminGetPostStatuses}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const changeStatus = async (data) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n\r\n    console.log(data);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `${apiHost}/${apiAdminChangePostStatus}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Статус обновлен\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const createOrUpdatePost = async (data) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    const bodyFormData = fileFormData(data);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `${apiHost}/${apiAdminPostCreate}`,\r\n        bodyFormData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Статья создана\");\r\n        await router.push(\"/admin/posts\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getPosts = async () => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `${apiHost}/${apiAdminPostsIndex}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        posts.value = response.data;\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    console.log(id);\r\n    try {\r\n      const response = await axiosInstance.delete(\r\n        `${apiHost}/${apiAdminPostDelete}`,\r\n        {\r\n          data: {\r\n            id,\r\n          },\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Стаья удалена\");\r\n        posts.value = posts.value.filter((post) => post.id !== id);\r\n        console.log(posts.value, \"отфильтрованно\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Ошибка при удалении статьи\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    getPosts,\r\n    tableHeaders,\r\n    tableTitle,\r\n    getByPostId,\r\n    getPostStatuses,\r\n    createOrUpdatePost,\r\n    deletePost,\r\n    posts,\r\n    changeStatus,\r\n  };\r\n});\r\n"],"sourceRoot":""}