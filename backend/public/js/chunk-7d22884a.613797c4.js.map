{"version":3,"sources":["webpack:///./node_modules/striptags/src/striptags.js","webpack:///./src/components/BaseTable.vue","webpack:///./src/components/BaseTable.vue?f6d3","webpack:///./src/views/admin/posts/index.vue","webpack:///./src/views/admin/posts/index.vue?329d","webpack:///./src/components/BaseTable.vue?799d","webpack:///./src/helpers/fileFormData.js","webpack:///./src/stores/axiosInstance.js","webpack:///./src/stores/admin/posts.js"],"names":["global","Symbol","name","nonNative","STATE_PLAINTEXT","STATE_HTML","STATE_COMMENT","ALLOWED_TAGS_REGEX","NORMALIZE_TAG_REGEX","striptags","html","allowable_tags","tag_replacement","context","init_context","striptags_internal","init_striptags_stream","parse_allowable_tags","state","tag_buffer","depth","in_quote_char","TypeError","output","idx","length","char","has","normalize_tag","slice","tag_set","Set","match","exec","add","iterator","forEach","toLowerCase","init_streaming_mode","require","console","log","props","__exports__","adminPostsStore","useAdminPostsStore","getPosts","posts","storeToRefs","statuses","getPostStatuses","fileFormData","data","bodyFormData","FormData","key","value","Object","entries","append","useAxiosStore","defineStore","loginStore","useLoginStore","refreshUserStore","useRefreshUserStore","setConfigAxios","axiosInstance","axios","create","interceptors","response","use","async","originalRequest","error","config","status","_retry","newToken","refresh","headers","Authorization","accessToken","logout","router","useRouter","push","showLoginPage","Promise","reject","axiosStore","ref","getByPostId","payloadPostId","find","post","Number","id","tableTitle","tableHeaders","getAccessTokenStorage","get","apiHost","apiAdminGetPostStatuses","changeStatus","apiAdminChangePostStatus","createOrUpdatePost","apiAdminPostCreate","apiAdminPostsIndex","deletePost","delete","apiAdminPostDelete","filter"],"mappings":"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","file":"js/chunk-7d22884a.613797c4.js","sourcesContent":["'use strict';\n\n(function (global) {\n\n    // minimal symbol polyfill for IE11 and others\n    if (typeof Symbol !== 'function') {\n        var Symbol = function(name) {\n            return name;\n        }\n\n        Symbol.nonNative = true;\n    }\n\n    const STATE_PLAINTEXT = Symbol('plaintext');\n    const STATE_HTML      = Symbol('html');\n    const STATE_COMMENT   = Symbol('comment');\n\n    const ALLOWED_TAGS_REGEX  = /<(\\w*)>/g;\n    const NORMALIZE_TAG_REGEX = /<\\/?([^\\s\\/>]+)/;\n\n    function striptags(html, allowable_tags, tag_replacement) {\n        html            = html || '';\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return striptags_internal(html, context);\n    }\n\n    function init_striptags_stream(allowable_tags, tag_replacement) {\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return function striptags_stream(html) {\n            return striptags_internal(html || '', context);\n        };\n    }\n\n    striptags.init_streaming_mode = init_striptags_stream;\n\n    function init_context(allowable_tags, tag_replacement) {\n        allowable_tags = parse_allowable_tags(allowable_tags);\n\n        return {\n            allowable_tags : allowable_tags,\n            tag_replacement: tag_replacement,\n\n            state         : STATE_PLAINTEXT,\n            tag_buffer    : '',\n            depth         : 0,\n            in_quote_char : ''\n        };\n    }\n\n    function striptags_internal(html, context) {\n        if (typeof html != \"string\") {\n            throw new TypeError(\"'html' parameter must be a string\");\n        }\n\n        let allowable_tags  = context.allowable_tags;\n        let tag_replacement = context.tag_replacement;\n\n        let state         = context.state;\n        let tag_buffer    = context.tag_buffer;\n        let depth         = context.depth;\n        let in_quote_char = context.in_quote_char;\n        let output        = '';\n\n        for (let idx = 0, length = html.length; idx < length; idx++) {\n            let char = html[idx];\n\n            if (state === STATE_PLAINTEXT) {\n                switch (char) {\n                    case '<':\n                        state       = STATE_HTML;\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        output += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_HTML) {\n                switch (char) {\n                    case '<':\n                        // ignore '<' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // we're seeing a nested '<'\n                        depth++;\n                        break;\n\n                    case '>':\n                        // ignore '>' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // something like this is happening: '<<>>'\n                        if (depth) {\n                            depth--;\n\n                            break;\n                        }\n\n                        // this is closing the tag in tag_buffer\n                        in_quote_char = '';\n                        state         = STATE_PLAINTEXT;\n                        tag_buffer   += '>';\n\n                        if (allowable_tags.has(normalize_tag(tag_buffer))) {\n                            output += tag_buffer;\n                        } else {\n                            output += tag_replacement;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    case '\"':\n                    case '\\'':\n                        // catch both single and double quotes\n\n                        if (char === in_quote_char) {\n                            in_quote_char = '';\n                        } else {\n                            in_quote_char = in_quote_char || char;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case '-':\n                        if (tag_buffer === '<!-') {\n                            state = STATE_COMMENT;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case ' ':\n                    case '\\n':\n                        if (tag_buffer === '<') {\n                            state      = STATE_PLAINTEXT;\n                            output    += '< ';\n                            tag_buffer = '';\n\n                            break;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_COMMENT) {\n                switch (char) {\n                    case '>':\n                        if (tag_buffer.slice(-2) == '--') {\n                            // close the comment\n                            state = STATE_PLAINTEXT;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n        }\n\n        // save the context for future iterations\n        context.state         = state;\n        context.tag_buffer    = tag_buffer;\n        context.depth         = depth;\n        context.in_quote_char = in_quote_char;\n\n        return output;\n    }\n\n    function parse_allowable_tags(allowable_tags) {\n        let tag_set = new Set();\n\n        if (typeof allowable_tags === 'string') {\n            let match;\n\n            while ((match = ALLOWED_TAGS_REGEX.exec(allowable_tags))) {\n                tag_set.add(match[1]);\n            }\n        }\n\n        else if (!Symbol.nonNative &&\n                 typeof allowable_tags[Symbol.iterator] === 'function') {\n\n            tag_set = new Set(allowable_tags);\n        }\n\n        else if (typeof allowable_tags.forEach === 'function') {\n            // IE11 compatible\n            allowable_tags.forEach(tag_set.add, tag_set);\n        }\n\n        return tag_set;\n    }\n\n    function normalize_tag(tag_buffer) {\n        let match = NORMALIZE_TAG_REGEX.exec(tag_buffer);\n\n        return match ? match[1].toLowerCase() : null;\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(function module_factory() { return striptags; });\n    }\n\n    else if (typeof module === 'object' && module.exports) {\n        // Node\n        module.exports = striptags;\n    }\n\n    else {\n        // Browser\n        global.striptags = striptags;\n    }\n}(this));\n","<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h3 class=\"card-title\">{{ tableTitle }}</h3>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <table id=\"example1\" class=\"table table-bordered table-striped\">\r\n        <thead>\r\n          <tr>\r\n            <th v-for=\"(header, index) of tableHeaders\" :key=\"index\">\r\n              {{ header }}\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            @click.stop=\"$router.push({ path: '/admin/post/' + content.id })\"\r\n            v-for=\"content of tableContent\"\r\n            :key=\"content.id\"\r\n            class=\"box\"\r\n          >\r\n            <td v-for=\"(item, key) of content\" :key=\"key\">\r\n              <select\r\n                class=\"form-control\"\r\n                @click.stop\r\n                @change=\"\r\n                  emits('changeStatus', {\r\n                    post_status_id: $event.target.value,\r\n                    id: content.id,\r\n                  })\r\n                \"\r\n                v-if=\"key === 'post_status_id'\"\r\n              >\r\n                <option\r\n                  :selected=\"Number(status.id) === Number(item)\"\r\n                  v-for=\"status in props.postStatuses\"\r\n                  :key=\"status.id\"\r\n                  :value=\"status.id\"\r\n                >\r\n                  {{ status.name }}\r\n                </option>\r\n              </select>\r\n              <span class=\"cut-text\" v-else>{{ striptags(item) }}</span>\r\n            </td>\r\n            <i\r\n              @click.stop=\"emits('deletePost', content.id)\"\r\n              class=\"fa-solid fa-trash icon-transparent\"\r\n            ></i>\r\n            <router-link\r\n              @click.stop\r\n              :to=\"{ path: '/admin/post/' + content.id }\"\r\n            >\r\n              <i class=\"fa-solid fa-file-pen\"></i>\r\n            </router-link>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from \"vue\";\r\n// const regExp = /^(&nbsp;|<br>)+/;\r\nconst striptags = require(\"striptags\");\r\nconst emits = defineEmits([\"deletePost\", \"changeStatus\"]);\r\nconst props = defineProps({\r\n  tableTitle: {\r\n    type: String,\r\n  },\r\n  tableHeaders: {\r\n    type: Array,\r\n  },\r\n  tableContent: {\r\n    type: Array,\r\n  },\r\n  postStatuses: {\r\n    type: Array,\r\n  },\r\n});\r\nconsole.log(props);\r\n</script>\r\n<style>\r\n.cut-text {\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 2;\r\n  -webkit-box-orient: vertical;\r\n  line-height: 1.3em;\r\n  height: 2.4em;\r\n  max-width: 14em;\r\n}\r\n</style>\r\n","import script from \"./BaseTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BaseTable.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BaseTable.vue?vue&type=style&index=0&id=fa2a9086&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"content-wrapper\">\r\n    <section class=\"content-header\">\r\n      <div class=\"container-fluid\">\r\n        <div class=\"my-4\">\r\n          <router-link to=\"/admin/posts/create\" class=\"btn btn-success\">\r\n            Создать\r\n          </router-link>\r\n        </div>\r\n        <div class=\"row mb-2\">\r\n          <base-table\r\n            @delete-post=\"adminPostsStore.deletePost\"\r\n            @change-status=\"adminPostsStore.changeStatus\"\r\n            :table-headers=\"adminPostsStore.tableHeaders\"\r\n            :table-content=\"posts\"\r\n            :post-statuses=\"statuses\"\r\n          />\r\n          <div class=\"col-sm-6\">\r\n            <ol class=\"breadcrumb float-sm-right\">\r\n              <li class=\"breadcrumb-item\"><a href=\"#\">Home</a></li>\r\n              <li class=\"breadcrumb-item active\">DataTables</li>\r\n            </ol>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport BaseTable from \"../../../components/BaseTable.vue\";\r\nimport { useAdminPostsStore } from \"@/stores/admin/posts.js\";\r\nimport { storeToRefs } from \"pinia\";\r\nconst adminPostsStore = useAdminPostsStore();\r\nawait adminPostsStore.getPosts();\r\nconst { posts } = storeToRefs(adminPostsStore);\r\nconst statuses = await adminPostsStore.getPostStatuses();\r\n</script>\r\n\r\n<style scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./BaseTable.vue?vue&type=style&index=0&id=fa2a9086&lang=css\"","export const fileFormData = (data) => {\r\n  const bodyFormData = new FormData();\r\n  for (const [key, value] of Object.entries(data)) {\r\n    bodyFormData.append(key, value);\r\n  }\r\n\r\n  return bodyFormData;\r\n};\r\n","import { defineStore } from \"pinia\";\r\nimport { useLoginStore } from \"~/stores/login\";\r\nimport axios from \"axios\";\r\nimport { useRefreshUserStore } from \"~/stores/refreshUser.js\";\r\nimport { useRouter } from \"vue-router\";\r\n\r\nexport const useAxiosStore = defineStore(\"axiosStore\", () => {\r\n  const loginStore = useLoginStore();\r\n  const refreshUserStore = useRefreshUserStore();\r\n  const setConfigAxios = () => {\r\n    let axiosInstance;\r\n    axiosInstance = axios.create();\r\n\r\n    // axiosInstance.interceptors.request.use(\r\n    //     async config => {\r\n    //         if (tokenAccess) {\r\n    //         }\r\n    //         return config;\r\n    //     },\r\n    //     error => {\r\n    //         return Promise.reject(error);\r\n    //     }\r\n    // );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n      (response) => {\r\n        return response;\r\n      },\r\n      async (error) => {\r\n        const originalRequest = error.config;\r\n        if (error.response.status === 403 && !originalRequest._retry) {\r\n          originalRequest._retry = true;\r\n          try {\r\n            const newToken = await refreshUserStore.refresh();\r\n            originalRequest.headers.Authorization = `Bearer ${newToken.accessToken}`;\r\n            console.log(axiosInstance(originalRequest));\r\n            return axiosInstance(originalRequest);\r\n          } catch (error) {\r\n            console.log(error);\r\n            await loginStore.logout();\r\n            const router = useRouter();\r\n            await router.push(\"/\");\r\n            loginStore.showLoginPage();\r\n          }\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n    return axiosInstance;\r\n  };\r\n\r\n  return { setConfigAxios };\r\n});\r\n","import { defineStore } from \"pinia\";\r\nimport { fileFormData } from \"~/helpers/fileFormData.js\";\r\nimport { ref } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {\r\n  apiHost,\r\n  apiAdminPostsIndex,\r\n  apiAdminGetPostStatuses,\r\n  apiAdminPostCreate,\r\n  apiAdminPostDelete,\r\n  apiAdminChangePostStatus,\r\n} from \"~/config/api.js\";\r\nimport { useLoginStore } from \"~/stores/login.js\";\r\nimport { useAxiosStore } from \"~/stores/axiosInstance.js\";\r\n\r\nexport const useAdminPostsStore = defineStore(\"adminPostsStore\", () => {\r\n  const loginStore = useLoginStore();\r\n  const axiosStore = useAxiosStore();\r\n  const axiosInstance = axiosStore.setConfigAxios();\r\n  const router = useRouter();\r\n  let posts = ref(null);\r\n\r\n  const getByPostId = async (payloadPostId) => {\r\n    console.log(payloadPostId);\r\n    if (posts.value === null) {\r\n      posts.value = await getPosts();\r\n    }\r\n    return posts.value.find(\r\n      (post) => Number(post.id) === Number(payloadPostId)\r\n    );\r\n  };\r\n  const tableTitle = \"Редактирование статей\";\r\n  const tableHeaders = [\r\n    \"id\",\r\n    \"name\",\r\n    \"description\",\r\n    \"image\",\r\n    \"icon\",\r\n    \"post_status_id\",\r\n    \"user_id\",\r\n    \"created_at\",\r\n    \"updated_at\",\r\n  ];\r\n  const getPostStatuses = async () => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `${apiHost}/${apiAdminGetPostStatuses}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const changeStatus = async (data) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n\r\n    console.log(data);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `${apiHost}/${apiAdminChangePostStatus}`,\r\n        data,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Статус обновлен\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const createOrUpdatePost = async (data) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    const bodyFormData = fileFormData(data);\r\n\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        `${apiHost}/${apiAdminPostCreate}`,\r\n        bodyFormData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Статья создана\");\r\n        await router.push(\"/admin/posts\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const getPosts = async () => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        `${apiHost}/${apiAdminPostsIndex}`,\r\n        {\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        posts.value = response.data;\r\n        return response.data;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const deletePost = async (id) => {\r\n    const accessToken = loginStore.getAccessTokenStorage();\r\n    console.log(id);\r\n    try {\r\n      const response = await axiosInstance.delete(\r\n        `${apiHost}/${apiAdminPostDelete}`,\r\n        {\r\n          data: {\r\n            id,\r\n          },\r\n          headers: { Authorization: `Bearer ${accessToken}` },\r\n        }\r\n      );\r\n      if (response.status === 200) {\r\n        console.log(\"Стаья удалена\");\r\n        posts.value = posts.value.filter((post) => post.id !== id);\r\n        console.log(posts.value, \"отфильтрованно\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Ошибка при удалении статьи\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    getPosts,\r\n    tableHeaders,\r\n    tableTitle,\r\n    getByPostId,\r\n    getPostStatuses,\r\n    createOrUpdatePost,\r\n    deletePost,\r\n    posts,\r\n    changeStatus,\r\n  };\r\n});\r\n"],"sourceRoot":""}